{"title":"批量插入10万+条数据优化过程","slug":"批量插入10万-条数据优化过程","date":"2023-06-14T06:53:13.000Z","updated":"2025-03-21T02:16:26.190Z","comments":true,"path":"api/articles/批量插入10万-条数据优化过程.json","excerpt":null,"covers":["https://plus.unsplash.com/premium_photo-1684164601714-177fbc9b5184?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwzMXx8fGVufDB8fHx8fA%3D%3D&w=1000&q=80","/2023/06/14/%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A510%E4%B8%87-%E6%9D%A1%E6%95%B0%E6%8D%AE%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B/format,webp.webp"],"content":"<img src=\"https://plus.unsplash.com/premium_photo-1684164601714-177fbc9b5184?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwzMXx8fGVufDB8fHx8fA%3D%3D&w=1000&q=80\" alt=\"a child's bedroom with a stuffed animal on the floor\" style=\"zoom:50%;\">\n\n<p>在使用mybatis插入大量数据的时候,为了提高效率,放弃循环插入,改为批量插入,mapper如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">TestMapper</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"meta\">@Insert(&quot;&lt;script&gt;&quot; +</span></span><br><span class=\"line\"><span class=\"meta\">            &quot;insert into test (t1,t2,t3,t4,t5) values &quot; +</span></span><br><span class=\"line\"><span class=\"meta\">            &quot;&lt;foreach collection=&#x27;list&#x27; item=&#x27;obj&#x27; separator=&#x27;,&#x27;&gt;&quot; +</span></span><br><span class=\"line\"><span class=\"meta\">            &quot;(#&#123;obj.t1&#125;,#&#123;obj.t2&#125;,#&#123;obj.t3&#125;,#&#123;obj.t4&#125;,#&#123;obj.t5&#125;)&quot; +</span></span><br><span class=\"line\"><span class=\"meta\">            &quot;&lt;/foreach&gt;&quot; +</span></span><br><span class=\"line\"><span class=\"meta\">            &quot;&lt;/script&gt;&quot;)</span></span><br><span class=\"line\">    Integer <span class=\"title function_\">testBatchInsert</span><span class=\"params\">(List&lt;TestVO&gt; list)</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>实体类:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestVO</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String t1;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String t2;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String t3;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String t4;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String t5; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>测试类如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootTest(classes = TestApplication.class)</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith(SpringRunner.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestDemo</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TestMapper testMapper;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insert</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        List&lt;TestVO&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">200000</span>; i++) &#123;</span><br><span class=\"line\">            list.add(<span class=\"keyword\">new</span> <span class=\"title class_\">TestVO</span>(i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(testMapper.testBatchInsert(list));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>为了复现bug,我限制了JVM内存:</p>\n<img src=\"/2023/06/14/%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A510%E4%B8%87-%E6%9D%A1%E6%95%B0%E6%8D%AE%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B/format,webp.webp\" class title=\"mybatis批量插入10万条数据的优化过程_java\">\n\n<p>执行测试类报错如下:</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java<span class=\"selector-class\">.lang</span><span class=\"selector-class\">.OutOfMemoryError</span>: Java heap space</span><br><span class=\"line\"> </span><br><span class=\"line\">  at java.base/java<span class=\"selector-class\">.util</span><span class=\"selector-class\">.Arrays</span><span class=\"selector-class\">.copyOf</span>(Arrays<span class=\"selector-class\">.java</span>:<span class=\"number\">3746</span>)</span><br></pre></td></tr></table></figure>\n\n<p>可以看到,Arrays在申请内存的时候,导致栈内存溢出</p>\n<p>改进方法,分批新增:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootTest(classes = TestApplication.class)</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith(SpringRunner.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestDemo</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TestMapper testMapper;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insert</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        List&lt;TestVO&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">200000</span>; i++) &#123;</span><br><span class=\"line\">            list.add(<span class=\"keyword\">new</span> <span class=\"title class_\">TestVO</span>(i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">index</span> <span class=\"operator\">=</span> list.size() / <span class=\"number\">10000</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt; index;i++)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//stream流表达式，skip表示跳过前i*10000条记录，limit表示读取当前流的前10000条记录</span></span><br><span class=\"line\">            testMapper.testBatchInsert(list.stream().skip(i*<span class=\"number\">10000</span>).limit(<span class=\"number\">10000</span>).collect(Collectors.toList()));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>有一种方法是调高JVM内存,不过不建议使用,不仅吃内存,而且数据量过大会导致sql过长报错.</p>\n<p>另附存储过程循环插入:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">PROCEDURE</span> IF <span class=\"keyword\">EXISTS</span> pdu_loop;</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> pdu_loop(a <span class=\"type\">int</span>)</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"> <span class=\"keyword\">declare</span> i <span class=\"type\">int</span> <span class=\"keyword\">default</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"> <span class=\"comment\">-- 循环开始</span></span><br><span class=\"line\"> loop_name:loop               </span><br><span class=\"line\">  if i<span class=\"operator\">&gt;</span>a <span class=\"keyword\">then</span> </span><br><span class=\"line\"><span class=\"comment\">-- 判断条件成立则结束循环</span></span><br><span class=\"line\">    leave loop_name;          </span><br><span class=\"line\">  <span class=\"keyword\">end</span> if;</span><br><span class=\"line\">  <span class=\"comment\">-- start 往表添加数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">INSERT INTO</span> `scs_test2`.`scs_exrate_system_d`(`tenantsid`, `exrate_system_no`, `effective_date`, `source_currency`, `target_currency`, `exrate_decimal_place`, `direct_quotation_exrate`, `indirect_quotation_exrate`, `average_exrate`, `manage_status`, `create_date`, `create_by`, `modified_date`, `modified_by`) <span class=\"keyword\">VALUES</span> (<span class=\"number\">485743257928256</span>, i, <span class=\"string\">&#x27;2022-12-12 12:12:12&#x27;</span>, <span class=\"string\">&#x27;jsj&#x27;</span>, <span class=\"string\">&#x27;003&#x27;</span>, <span class=\"number\">2</span>, <span class=\"number\">6.9900000000</span>, <span class=\"number\">7.9900000000</span>, <span class=\"keyword\">NULL</span>, <span class=\"string\">&#x27;Y&#x27;</span>, <span class=\"string\">&#x27;2023-06-12 01:03:45&#x27;</span>, <span class=\"string\">&#x27;ScsQCTest001&#x27;</span>, <span class=\"keyword\">NULL</span>, <span class=\"keyword\">NULL</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">-- end</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> i<span class=\"operator\">=</span>i<span class=\"operator\">+</span><span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 循环结束</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span> loop;                  </span><br><span class=\"line\"><span class=\"comment\">-- start输出结果</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> scs_exrate_system_d <span class=\"keyword\">where</span> source_currency<span class=\"operator\">=</span><span class=\"string\">&#x27;jsj&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">-- end   </span></span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"> <span class=\"comment\">-- 执行存储过程</span></span><br><span class=\"line\"><span class=\"keyword\">call</span> pdu_loop(<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure>\n\n","more":"<img src=\"https://plus.unsplash.com/premium_photo-1684164601714-177fbc9b5184?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwzMXx8fGVufDB8fHx8fA%3D%3D&w=1000&q=80\" alt=\"a child's bedroom with a stuffed animal on the floor\" style=\"zoom:50%;\" />\n\n<p>在使用mybatis插入大量数据的时候,为了提高效率,放弃循环插入,改为批量插入,mapper如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">TestMapper</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"meta\">@Insert(&quot;&lt;script&gt;&quot; +</span></span><br><span class=\"line\"><span class=\"meta\">            &quot;insert into test (t1,t2,t3,t4,t5) values &quot; +</span></span><br><span class=\"line\"><span class=\"meta\">            &quot;&lt;foreach collection=&#x27;list&#x27; item=&#x27;obj&#x27; separator=&#x27;,&#x27;&gt;&quot; +</span></span><br><span class=\"line\"><span class=\"meta\">            &quot;(#&#123;obj.t1&#125;,#&#123;obj.t2&#125;,#&#123;obj.t3&#125;,#&#123;obj.t4&#125;,#&#123;obj.t5&#125;)&quot; +</span></span><br><span class=\"line\"><span class=\"meta\">            &quot;&lt;/foreach&gt;&quot; +</span></span><br><span class=\"line\"><span class=\"meta\">            &quot;&lt;/script&gt;&quot;)</span></span><br><span class=\"line\">    Integer <span class=\"title function_\">testBatchInsert</span><span class=\"params\">(List&lt;TestVO&gt; list)</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>实体类:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestVO</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String t1;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String t2;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String t3;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String t4;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String t5; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>测试类如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootTest(classes = TestApplication.class)</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith(SpringRunner.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestDemo</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TestMapper testMapper;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insert</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        List&lt;TestVO&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">200000</span>; i++) &#123;</span><br><span class=\"line\">            list.add(<span class=\"keyword\">new</span> <span class=\"title class_\">TestVO</span>(i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(testMapper.testBatchInsert(list));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>为了复现bug,我限制了JVM内存:</p>\n<img src=\"/2023/06/14/%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A510%E4%B8%87-%E6%9D%A1%E6%95%B0%E6%8D%AE%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B/format,webp.webp\" class=\"\" title=\"mybatis批量插入10万条数据的优化过程_java\">\n\n<p>执行测试类报错如下:</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java<span class=\"selector-class\">.lang</span><span class=\"selector-class\">.OutOfMemoryError</span>: Java heap space</span><br><span class=\"line\"> </span><br><span class=\"line\">  at java.base/java<span class=\"selector-class\">.util</span><span class=\"selector-class\">.Arrays</span><span class=\"selector-class\">.copyOf</span>(Arrays<span class=\"selector-class\">.java</span>:<span class=\"number\">3746</span>)</span><br></pre></td></tr></table></figure>\n\n<p>可以看到,Arrays在申请内存的时候,导致栈内存溢出</p>\n<p>改进方法,分批新增:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootTest(classes = TestApplication.class)</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith(SpringRunner.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestDemo</span> &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TestMapper testMapper;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insert</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        List&lt;TestVO&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">200000</span>; i++) &#123;</span><br><span class=\"line\">            list.add(<span class=\"keyword\">new</span> <span class=\"title class_\">TestVO</span>(i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i, i + <span class=\"string\">&quot;,&quot;</span> + i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">index</span> <span class=\"operator\">=</span> list.size() / <span class=\"number\">10000</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt; index;i++)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//stream流表达式，skip表示跳过前i*10000条记录，limit表示读取当前流的前10000条记录</span></span><br><span class=\"line\">            testMapper.testBatchInsert(list.stream().skip(i*<span class=\"number\">10000</span>).limit(<span class=\"number\">10000</span>).collect(Collectors.toList()));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>有一种方法是调高JVM内存,不过不建议使用,不仅吃内存,而且数据量过大会导致sql过长报错.</p>\n<p>另附存储过程循环插入:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">PROCEDURE</span> IF <span class=\"keyword\">EXISTS</span> pdu_loop;</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">procedure</span> pdu_loop(a <span class=\"type\">int</span>)</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"> <span class=\"keyword\">declare</span> i <span class=\"type\">int</span> <span class=\"keyword\">default</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"> <span class=\"comment\">-- 循环开始</span></span><br><span class=\"line\"> loop_name:loop               </span><br><span class=\"line\">  if i<span class=\"operator\">&gt;</span>a <span class=\"keyword\">then</span> </span><br><span class=\"line\"><span class=\"comment\">-- 判断条件成立则结束循环</span></span><br><span class=\"line\">    leave loop_name;          </span><br><span class=\"line\">  <span class=\"keyword\">end</span> if;</span><br><span class=\"line\">  <span class=\"comment\">-- start 往表添加数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">INSERT INTO</span> `scs_test2`.`scs_exrate_system_d`(`tenantsid`, `exrate_system_no`, `effective_date`, `source_currency`, `target_currency`, `exrate_decimal_place`, `direct_quotation_exrate`, `indirect_quotation_exrate`, `average_exrate`, `manage_status`, `create_date`, `create_by`, `modified_date`, `modified_by`) <span class=\"keyword\">VALUES</span> (<span class=\"number\">485743257928256</span>, i, <span class=\"string\">&#x27;2022-12-12 12:12:12&#x27;</span>, <span class=\"string\">&#x27;jsj&#x27;</span>, <span class=\"string\">&#x27;003&#x27;</span>, <span class=\"number\">2</span>, <span class=\"number\">6.9900000000</span>, <span class=\"number\">7.9900000000</span>, <span class=\"keyword\">NULL</span>, <span class=\"string\">&#x27;Y&#x27;</span>, <span class=\"string\">&#x27;2023-06-12 01:03:45&#x27;</span>, <span class=\"string\">&#x27;ScsQCTest001&#x27;</span>, <span class=\"keyword\">NULL</span>, <span class=\"keyword\">NULL</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">-- end</span></span><br><span class=\"line\">  <span class=\"keyword\">set</span> i<span class=\"operator\">=</span>i<span class=\"operator\">+</span><span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 循环结束</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span> loop;                  </span><br><span class=\"line\"><span class=\"comment\">-- start输出结果</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> scs_exrate_system_d <span class=\"keyword\">where</span> source_currency<span class=\"operator\">=</span><span class=\"string\">&#x27;jsj&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">-- end   </span></span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"> <span class=\"comment\">-- 执行存储过程</span></span><br><span class=\"line\"><span class=\"keyword\">call</span> pdu_loop(<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure>\n\n","categories":[{"name":"数据优化","path":"api/categories/数据优化.json"}],"tags":[{"name":"mysql","path":"api/tags/mysql.json"}]}